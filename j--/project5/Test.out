Classfile /Users/zionchilagan/workspace/j--/project5/Test.class
  Last modified Apr 19, 2024; size 517 bytes
  SHA-256 checksum 7cb5cc6be8f5b2121b8ae0e3907c351d2af9cff223d228ba1075e67ed8ccb4c3
  Compiled from "Test.java"
public class Test
  minor version: 0
  major version: 65
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #10                         // Test
  super_class: #2                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 3, attributes: 1
Constant pool:
   #1 = Methodref          #2.#3          // java/lang/Object."<init>":()V
   #2 = Class              #4             // java/lang/Object
   #3 = NameAndType        #5:#6          // "<init>":()V
   #4 = Utf8               java/lang/Object
   #5 = Utf8               <init>
   #6 = Utf8               ()V
   #7 = Double             5.0d
   #9 = Methodref          #10.#11        // Test.sqrt:(D)D
  #10 = Class              #12            // Test
  #11 = NameAndType        #13:#14        // sqrt:(D)D
  #12 = Utf8               Test
  #13 = Utf8               sqrt
  #14 = Utf8               (D)D
  #15 = Class              #16            // java/lang/IllegalArgumentException
  #16 = Utf8               java/lang/IllegalArgumentException
  #17 = String             #18            // x must be positve
  #18 = Utf8               x must be positve
  #19 = Methodref          #15.#20        // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #20 = NameAndType        #5:#21         // "<init>":(Ljava/lang/String;)V
  #21 = Utf8               (Ljava/lang/String;)V
  #22 = Double             3.0d
  #24 = Utf8               Code
  #25 = Utf8               LineNumberTable
  #26 = Utf8               main
  #27 = Utf8               ([Ljava/lang/String;)V
  #28 = Utf8               StackMapTable
  #29 = Utf8               Exceptions
  #30 = Utf8               SourceFile
  #31 = Utf8               Test.java
{
  public Test();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 10: 0

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: ldc2_w        #7                  // double 5.0d
         3: invokestatic  #9                  // Method sqrt:(D)D
         6: pop2
         7: return
      LineNumberTable:
        line 28: 0
        line 29: 7

  private static double sqrt(double) throws java.lang.IllegalArgumentException;
    descriptor: (D)D
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=2, args_size=1
         0: dload_0
         1: dconst_0
         2: dcmpg
         3: ifge          16
         6: new           #15                 // class java/lang/IllegalArgumentException
         9: dup
        10: ldc           #17                 // String x must be positve
        12: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        15: athrow
        16: ldc2_w        #22                 // double 3.0d
        19: dreturn
      LineNumberTable:
        line 32: 0
        line 33: 6
        line 35: 16
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
    Exceptions:
      throws java.lang.IllegalArgumentException
}
SourceFile: "Test.java"
